# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2015, Kovid Goyal <kovid at kovidgoyal.net>

from dom import build_rule
from elementmaker import E

from book_list.theme import get_font_size, get_color

iv_counter = 0

class ItemsView:

    def __init__(self, interface_data):
        nonlocal iv_counter
        iv_counter += 1
        self.container_id = 'items-view-' + iv_counter
        style = ''
        cid = '#' + self.container_id
        style += build_rule(cid + ' li', padding='1em', border_bottom='solid 1px ' + get_color('window-foreground'), border_top='solid 1px ' + get_color('window-background'), cursor='pointer', list_style='none')
        style += build_rule(cid + ' .title', font_size=get_font_size('item-list-title'))
        style += build_rule(cid + ' .subtitle', font_size=get_font_size('item-list-subtitle'), font_style='italic')
        style += build_rule(cid + ' li:hover', color=get_color('bar-foreground'), background_color=get_color('bar-background'), border_top_color=get_color('bar-foreground'))
        style += build_rule(cid + ' li:active', color=get_color('bar-highlight'))
        self.base_style = style
        div = E.div(
            id=self.container_id, style='display:none',
            E.style(style, type='text/css')
        )
        document.body.appendChild(div)

    @property
    def container(self):
        return document.getElementById(self.container_id)

    @property
    def is_visible(self):
        self.container.style.display == 'block'

    @is_visible.setter
    def is_visible(self, val):
        self.container.style.display = 'block' if val else 'none'

    def clear(self):
        c = self.container
        while c.lastChild is not c.firstChild:
            c.removeChild(c.lastChild)
        return c

    def init(self, data):
        items = getattr(data, 'items', data)
        subtitle = getattr(data, 'subtitle', None)
        c = self.clear()
        if subtitle:
            c.appendChild(E.p(subtitle))
        ul = E.ul()
        c.appendChild(ul)
        has_icons = has_subtitles = False
        for item in items:
            if item.icon_name:
                has_icons = True
            if item.subtitle:
                has_subtitles = True
            if has_icons and has_subtitles:
                break

        for item in items:
            ul.appendChild(E.li(E.a(href='javascript:void(0)',
                E.div(item.title, class_='title')
            )))
            a = ul.lastChild.firstChild
            if item.subtitle:
                a.appendChild(E.div(item.subtitle, class_='subtitle'))
            if item.action:
                a.addEventListener('click', def(event): event.preventDefault(), item.action();)


def create_item(title, action=None, subtitle=None, icon_name=None):
    return {'title':title, 'action':action, 'subtitle':subtitle, 'icon_name':icon_name}
