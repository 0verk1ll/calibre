# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2016, Kovid Goyal <kovid at kovidgoyal.net>

from aes import GCM
from read_book.globals import set_boss

class Boss:

    def __init__(self):
        self.ready_sent = False
        self.encrypted_communications = False
        window.addEventListener('message', self.handle_message.bind(self), False)
        window.addEventListener('load', def():
            if not self.ready_sent:
                self.send_message({'action':'ready'})
                self.ready_sent = True
        )
        set_boss(self)
        self.handlers = {
            'keys':self.create_gcm.bind(self),
        }

    def handle_message(self, event):
        if event.source is not window.parent:
            return
        data = event.data
        if self.encrypted_communications:
            try:
                data = JSON.parse(self.gcm_from_parent.decrypt(data))
            except Exception as e:
                print('Could not process message from parent:')
                console.log(e)
                return
        func = self.handlers[data.action]
        if func:
            func(data)
        else:
            print('Unknown action in message to iframe from parent: ' + data.action)

    def create_gcm(self, data):
        self.gcm_from_parent, self.gcm_to_parent = GCM(data.secret.subarray(0, 32)), GCM(data.secret.subarray(32))

    def send_message(self, data):
        if self.encrypted_communications:
            data = self.gcm_to_parent.encrypt(JSON.stringify(data))
        window.parent.postMessage(data, '*')


def init():
    script = document.getElementById('bootstrap')
    script.parentNode.removeChild(script)  # free up some memory
    Boss()
